stages:
- stage: StageA
  jobs:
  # Set an output variable in a lifecycle hook of a deployment job executing runOnce strategy.
  - deployment: A
    pool:
      vmImage: 'ubuntu-16.04'
    environment: staging
    strategy:                  
      runOnce:
        deploy:
          steps:
          - bash: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the deployment variable value"
            name: setvarStep
          - bash: echo $(setvarStep.myOutputVar)
            name: echovar

  # Map the variable from the job.
  - job: B
    dependsOn: A
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      myVarFromDeploymentJob: $[ dependencies.A.outputs['A.setvarStep.myOutputVar'] ]
    steps:
    - script: "echo $(myVarFromDeploymentJob)"
      name: echovar

- stage: StageB
  jobs:
  # Set an output variable in a lifecycle hook of a deployment job executing runOnce strategy.
  - deployment: C
    pool:
      vmImage: 'ubuntu-16.04'
    environment: staging
    variables:
      myVarFromDeploymentStage: $[ stageDependencies.StageA.A.outputs['A.setvarStep.myOutputVar'] ]
    strategy:                  
      runOnce:
        deploy:
          steps:
          - bash: echo $(myVarFromDeploymentStage)
            name: echovartrytwo


